using MatData.Models.Records;
using MatData.ViewModels;
using System;

namespace MatData.Serialization
{
    public static class Q79Mapper
    {
        public static Q79Model Serialize(Q79Record model)
        {
            return new Q79Model
            {
                NomeExploracaoAgricola = model.q7906,
                ClassifiAgricultor = model.q7907,
                DataFundOperEconomico = model.q7908,
                EstadoFuncOperEconomico = model.q7909,
                NacionalidadeOperador = model.q7910,
                FormaJuridica = model.q7911,
                LocalTerritorioAgri = model.q7912,
                FotoAcessoTerriAgri = model.q7913,
                FotoZonaCulturas1 = model.q7914,
                FotoZonaCulturas2 = model.q7915,
                NumTitulo = model.q7916,
                IdServico = model.q7917,
                Contacto = model.q7918,
                Email = model.q7919,
                Website = model.q7920,
                NumTotalHectExploradosCampAnter = double.Parse(model.q7921),
                NumTotalHectDispoCultivCampAnterior = double.Parse(model.q7922),
                NumTotalHectExploradosCampCurso = double.Parse(model.q7923),
                NumTotalHectDispoCultivCampCurso = double.Parse(model.q7924),
                //Acesso a Sistemas de Apoio à Produção = model.q790,
                SistemaApoioProducao = model.q7925,
                IdEntidadesApoio = model.q7926,
                ValorCreditosAgropecuariosAC = double.Parse(model.q7927),
                ValorCreditosAgropecuariosUlt5Anos = double.Parse(model.q7928),
                //Movimento Associativo = model.q790,
                PertenceAssociacao = model.q7929,
                IdAssociacao = model.q7929 == "Sim" ? model.q7930 : null,
                PrincipaisBenef = model.q7929 == "Sim" ? model.q7931 : null,
                //Produção = model.q790,
                ProdFileiraCereais = model.q7932,
                ProdFileiraLeguminosas = model.q7933,
                ProdFileiraRaizes = model.q7934,
                ProdFileiraHorticolas = model.q7935,
                ProdFileiraFruticolas = model.q7936,
                ProdOutrasFileirasProduzidos = model.q7937,
                //Cultura de maior produção(CMP) = model.q790,
                IdCMP = model.q7938,
                VolProdCultCampTransCMP = double.Parse(model.q7939),
                NumHectCultivadosAnoTransCMP = double.Parse(model.q7940),
                NumHectCultivadosAnoCorrenteCMP = double.Parse(model.q7941),
                CustoProdCMP = double.Parse(model.q7942),
                ValorVendaProdutorCMP = double.Parse(model.q7943),
                PrecoKgProdComercializacaoCMP = double.Parse(model.q7944),
                //Cultura de segunda maior produção(CSMP) = model.q790,
                IdCSMP = model.q7945,
                VolProdCultCampTransCSMP = double.Parse(model.q7946),
                NumHectCultivadosAnoTransCSMP = double.Parse(model.q7947),
                NumHectCultivadosAnoCorrenteCSMP = double.Parse(model.q7948),
                CustoProdCSMP = double.Parse(model.q7949),
                ValorVendaProdutorCSMP = double.Parse(model.q7950),
                PrecoKgProdComercializacaoCSMP = double.Parse(model.q7951),
                //Cultura de terceira maior produção(CTMP) = model.q790,
                IdCTMP = model.q7952,
                VolProdCultCampTransCTMP = double.Parse(model.q7953),
                NumHectCultivadosAnoTransCTMP = double.Parse(model.q7954),
                NumHectCultivadosAnoCorrente = double.Parse(model.q7955),
                CustoProdCTMP = double.Parse(model.q7956),
                ValorVendaProdutorCTMP = double.Parse(model.q7957),
                PrecoKgProdComercializacaoCTMP = double.Parse(model.q7958),
                //Escoamento da Produção = model.q790,
                NumVeiculosEscoamento = Int32.Parse(model.q7959),
                NumVeiculosContratualizados = Int32.Parse(model.q7960),
                PrincipDestinosEscoamento = model.q7961,
                //Indicadores do Negócio = model.q790,
                NumClientesAnoTransacto = Int32.Parse(model.q7962),
                NumMedMensalCliente = double.Parse(model.q7963),
                DespesasMensais = double.Parse(model.q7964),
                ReceitasMensais = double.Parse(model.q7965),
                LucroMensal = double.Parse(model.q7966),
                ContabilidadeOrganizada = model.q7967,
                VolNegocios = model.q7967 == "Sim" ? double.Parse(model.q7968) : 0,
                SituacaoTributRegularizada = model.q7967 == "Sim" ? model.q7969 : null,
                ValLiquidadoImpostos = model.q7967 == "Sim" ? double.Parse(model.q7970) : 0,
                //Força de Trabalho = model.q790,
                NumDirProd = Int32.Parse(model.q7971),
                NumEspecialistas = Int32.Parse(model.q7972),
                NumTecIntermedios = Int32.Parse(model.q7973),
                NumAdmEquiparados = Int32.Parse(model.q7974),
                NumTrabServicosProteccao = Int32.Parse(model.q7975),
                NumTrabQualificadosCulturas = Int32.Parse(model.q7976),
                NumTrabQualificadosConstrucao = Int32.Parse(model.q7977),
                NumOperVeiculos = Int32.Parse(model.q7978),
                NumTrabNaoQualificados = Int32.Parse(model.q7979),
                PrincipConstraIdentificados = model.q7981,
                Observacoes = model.q7982,
            };
        }
    }
}
