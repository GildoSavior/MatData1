using MatData.Models.Records;
using MatData.ViewModels;
using System;

namespace MatData.Serialization
{
    public static class Q81Mapper
    {
        public static Q81Model Serialize(Q81Record model)
        {
            return new Q81Model
            {
                NomeArmador = model.q8106,
                DataFundacao = model.q8107,
                EstadoFuncional = model.q8108,
                Nacionalidade = model.q8109,
                FormaJuridica = model.q8110,
                ClassificacaoArmador = model.q8111,
                Localizacao = model.q8112,
                FotoAcess = model.q8113,
                FotoInterior = model.q8114,
                FotoEmbarcacoes = model.q8115,
                NumLicenca = model.q8116,
                IdServico = model.q8117,
                Contacto = model.q8118,
                Email = model.q8119,
                Website = model.q8120,
                TipoPescador = model.q8121,
                NumEmbarcPeqPorte = Int32.Parse(model.q8122),
                NumEmbarcMedPorte = Int32.Parse(model.q8123),
                NumEmbarcGrandPorte = Int32.Parse(model.q8124),
                NumSaidasPesca = Int32.Parse(model.q8125),
                PeriodSaidasPesca = model.q8126,
                QtdPeixeCapturado = Int32.Parse(model.q8127),
                QtdMedPeixeCapturado = Int32.Parse(model.q8128),
                //Sub - produtos às pescas e ao mar: secagem e salga artesanal de peixe e extracção artesanal de sal = model.q810,
                QtdPeixeSobraNaoFrescoSecar = double.Parse(model.q8129),
                QtdPeixeSobraNaoFrescoSalga = double.Parse(model.q8130),
                QtdSalExtraido = double.Parse(model.q8131),
                QtdProdOutrosSubProdutos = model.q8132,
                //Acesso a Sistemas de Apoio à Produção = model.q810,
                SistemasApoioProducao = model.q8133,
                IdEntidadesApoio = model.q8134,
                ValCredAnoCorrente = double.Parse(model.q8135),
                ValCredUltimos5Anos = double.Parse(model.q8136),
                //Movimento Associativo = model.q810,
                PertenceAssociacao = model.q8137,
                IdAssociacao = model.q8137 == "Sim" ? model.q8138 : null,
                PrincipaiBeneficios = model.q8137 == "Sim" ? model.q8139 : null,
                //Captura anual = model.q810,
                QtdSardinhaCapturada = double.Parse(model.q8140),
                QtdCarapauCapturada = double.Parse(model.q8141),
                QtdPargoCapturada = double.Parse(model.q8142),
                QtdAtumCapturada = double.Parse(model.q8143),
                QtdCherneCapturada = double.Parse(model.q8144),
                QtdCorvinaCapturada = double.Parse(model.q8145),
                QtdEspadaCapturada = double.Parse(model.q8146),
                QtdGaloCapturada = double.Parse(model.q8147),
                QtdBagreCapturada = double.Parse(model.q8148),
                QtdCacussoCapturada = double.Parse(model.q8149),
                QtdCachucho = double.Parse(model.q8150),
                QtdLagosta = double.Parse(model.q8151),
                QtdCaranguejo = double.Parse(model.q8152),
                QtdCamarao = double.Parse(model.q8153),
                QtdOutrasEspecies  = double.Parse(model.q8154),
                //Aquicultura = model.q810,
                ArmadorPossuiTanques = model.q8155,
                NumTanquesAquicultura = model.q8155 == "Sim" ? Int32.Parse(model.q8156) : 0,
                CapacidadeTotalTanques = model.q8155 == "Sim" ? double.Parse(model.q8157) : 0,
                LocalizacaoTanques = model.q8155 == "Sim" ? model.q8158 : null,
                FotoAcesso = model.q8155 == "Sim" ? model.q8159 : null,
                FotoTanque = model.q8155 == "Sim" ? model.q8160 : null,
                FotoProducao = model.q8155 == "Sim" ? model.q8161 : null,
                EspeciesPeixeCriadas = model.q8155 == "Sim" ?  model.q8162 : null,
                QtdPeixeCriadoAnoTransacto = model.q8155 == "Sim" ? double.Parse(model.q8163) : 0,
                QtdPeixeCriadoTrimestralmente = model.q8155 == "Sim" ?  double.Parse(model.q8164) : 0,
                //Espécie de maior captura(EMC) = model.q810,
                IdEspecieMaiorCapturaEMC = model.q8165,
                QtdEspecieCapturadaEMC = double.Parse(model.q8166),
                CustosCapturaToneladaPescadoEMC = double.Parse(model.q8167),
                ValVendaPescadoEMC = double.Parse(model.q8168),
                PrecoKgPescadoEMC = double.Parse(model.q8169),
                //Espécie de segunda maior captura(ESMC) = model.q810,
                IdEspecieMaiorCapturaESMC = model.q8170,
                QtdEspecieCapturadaESMC = double.Parse(model.q8171),
                CustosCapturaToneladaPescadoESMC = double.Parse(model.q8172),
                ValVendaPescadoESMC = double.Parse(model.q8173),
                PrecoKgPescadoESMC = double.Parse(model.q8174),
                //Espécie de terceira maior captura(ETMC) = model.q810,
                IdEspecieMaiorCapturaETMC = model.q8175,
                QtdEspecieCapturadaETMC = double.Parse(model.q8176),
                CustosCapturaToneladaPescadoETMC = double.Parse(model.q8177),
                ValVendaPescadoETMC = double.Parse(model.q8178),
                PrecoKgPescadoETMC = double.Parse(model.q8179),
                //Escoamento do pescado e condições de armazenamento e transporte = model.q810,
                NumVeiculosPropEscoamento = Int32.Parse(model.q8180),
                NumVeiculosContratEscoamento = Int32.Parse(model.q8181),
                GarantRefrigAcondPescBarco = model.q8182,
                GarantRefrigAcondPescTransporte = model.q8183,
                GarantRefrigAcondPescDoca = model.q8184,
                PrincipDestinosEscoamento = model.q8185,
                //Indicadores do Negócio = model.q810,
                NumClientesAnoTrans = Int32.Parse(model.q8186),
                NumMedMensal = Int32.Parse(model.q8187),
                DespesasMedMensais = double.Parse(model.q8188),
                ReceitasMedMensais = double.Parse(model.q8189),
                LucroMedMensal = double.Parse(model.q8190),
                ContabilidadeOrganizada = model.q8191,
                VolNegocios = model.q8191 == "Sim" ? double.Parse(model.q8192) : 0,
                SituacaoTribRegularizada = model.q8191 == "Sim" ? model.q8193 : null,
                ValLiquidImpostos = model.q8191 == "Sim" ? double.Parse(model.q8194) : 0,
                //Força de Trabalho = model.q810,
                NumDirProd =Int32.Parse(model.q8195),
                NumEspecialistas =Int32.Parse(model.q8196),
                NumTecIntermedios =Int32.Parse(model.q8197),
                NumAdmEquiparados =Int32.Parse(model.q8198),
                NumTrabServicosProteccao =Int32.Parse(model.q8199),
                NumTrabQualificadosCulturas = Int32.Parse(model.q81100),
                NumTrabQualificadosConstrucao = Int32.Parse(model.q81101),
                NumOperVeiculos = Int32.Parse(model.q81102),
                NumTrabNaoQualificados = Int32.Parse(model.q81103),
                PrincipConstraIdentificados = model.q81105,
                Observacoes = model.q81106,


            };
        }
    }
}
